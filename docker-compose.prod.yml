version: '3.8'

services:
  # RabbitMQ (Local hoặc Azure Service Bus)
  rabbitmq:
    image: rabbitmq:3.12-management
    container_name: microservices-rabbitmq
    restart: unless-stopped
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - microservices-network

  # Auth Service (sử dụng Azure Cosmos DB)
  auth-service:
    build: ./auth-service
    container_name: microservices-auth-service
    restart: unless-stopped
    environment:
      GRPC_PORT: 50051
      JWT_SECRET: ${JWT_SECRET}
      MONGODB_URI: ${MONGODB_AUTH_URI}
      AZURE_SERVICE_BUS_CONNECTION_STRING: ${AZURE_SERVICE_BUS_CONNECTION_STRING}
    depends_on:
      - rabbitmq
    networks:
      - microservices-network

  # User Service (sử dụng Azure Cosmos DB)
  user-service:
    build: ./user-service
    container_name: microservices-user-service
    restart: unless-stopped
    environment:
      GRPC_PORT: 50052
      MONGODB_URI: ${MONGODB_USER_URI}
      AZURE_SERVICE_BUS_CONNECTION_STRING: ${AZURE_SERVICE_BUS_CONNECTION_STRING}
    depends_on:
      - rabbitmq
    networks:
      - microservices-network

  # Todo Service (sử dụng Azure Cosmos DB)
  todo-service:
    build: ./todo-service
    container_name: microservices-todo-service
    restart: unless-stopped
    environment:
      GRPC_PORT: 50053
      MONGODB_URI: ${MONGODB_TODO_URI}
      AZURE_SERVICE_BUS_CONNECTION_STRING: ${AZURE_SERVICE_BUS_CONNECTION_STRING}
    depends_on:
      - rabbitmq
    networks:
      - microservices-network

  # API Gateway
  api-gateway:
    build: ./api-gateway
    container_name: microservices-api-gateway
    restart: unless-stopped
    environment:
      PORT: 3000
      AUTH_SERVICE_URL: auth-service:50051
      USER_SERVICE_URL: user-service:50052
      TODO_SERVICE_URL: todo-service:50053
    depends_on:
      - auth-service
      - user-service
      - todo-service
    networks:
      - microservices-network

  # Frontend
  frontend:
    build: ./frontend
    container_name: microservices-frontend
    restart: unless-stopped
    environment:
      VITE_API_URL: /api
    depends_on:
      - api-gateway
    networks:
      - microservices-network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: microservices-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - /etc/nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - api-gateway
    networks:
      - microservices-network

volumes:
  rabbitmq_data:

networks:
  microservices-network:
    driver: bridge
